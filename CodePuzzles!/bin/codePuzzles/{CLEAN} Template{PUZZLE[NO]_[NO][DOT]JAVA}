package codePuzzles;

import java.util.Scanner;

public class Puzzle#_# {
	/**
	 * @param args
	 */	
	final static String		question	="";		
	final static String[]   toDoString  ={""}; 		
	final static String[] 	solutionDesc={"",""};
											//Solution 1		...			//Solution 2 		...
 
	final static int 		solutionCount=solutionDesc.length;
	
	public static void 		getIntro()			{
													System.out.println("\nQuestion:"+question+"\n");
													
													System.out.println("Solution(s) Available:");
																										
													int currSolCount=0;
													for(String sd:solutionDesc)
														{
															if(currSolCount==solutionCount)break;
															System.out.println("\nSolution "+(++currSolCount)+":"+sd);//SAME AS--->//getSolutionDesc(currSolCount));
														}
												}
	public static int 		getSolutionCount()	{return solutionCount;}
	public static String 	getQuestion()  		{return question;}
	public static String 	getSolutionDesc(int i)
												{return solutionDesc[i-1];}
								
/* eg-IMPLEM-STUBS------------------------------------------------------------------------------------------	
	public static boolean isUnique_I(String s)	
	{	//System.out.println("\nSolution1:"+getSolutionDesc(1));
											
		return true;
	}
	
	public static boolean isUnique_II(String s)	
	{	//System.out.println("\nSolution2:"+getSolutionDesc(2));
	
		return true;											
	}
----------------------------------------------------------------------------------------------------------*/
												
	public static void run(int solnNo, Scanner sc)
	{	

if(solnNo<1||solnNo>getSolutionCount())
			  System.out.println("\n!!![Invalid Solution #]!!!");
		else
		{			  
			boolean inputGot=false;
			System.out.println("\nEnter Integer Array ["+toDoString[0]+"]:\n\n//ENTER -999999999 to STOP!");	//Can Extend # of String Input Prompts
			ArrayList<Integer> numberList=new ArrayList<Integer>();

			int intIn=Integer.MIN_VALUE;
			while( !( (intIn=sc.nextInt()) == -999999999 ) )	{numberList.add(intIn);}
	  
			int[] numbers=null;
			if (numberList.size()!=0)
			{						  
				numbers=new int[numberList.size()];		int i=0;				  
				for(int number:numberList){numbers[i++]=number;}
				
				inputGot=true;
			}
			else
				System.out.println("\nReturned MaxSum:NULL / NO Input Read!\n");
	  
	  
			if(inputGot)
			{				
				System.out.println("\nReturned MaxSum:");
				if(solnNo==1){	System.out.print("\n::"+ maxSum_I(numbers));					  							
			 	 	 		 }
				if(solnNo==2){	System.out.print("\n::"+maxSum_II(numbers));		  			  							
				 	 		 }		
			}
		}

		
//		/*	Alternate structure for run() - use for simple Code Puzzles	*/
//		
//		if(solnNo==1){System.out.print("\nEnter String ["+toDoString[0]+"]:");	//Can Extend # of String Input Prompts
//					  System.out.println("\n::"+/*Call to Soln 1*/);					  							
//					 }
//   else if(solnNo==2){System.out.print("\nEnter String ["+toDoString[0]+"]:");
//		  			  System.out.println("\n::"+/*Call to Soln 2*/);		  			  							
//		 			 }
//   		else System.out.println("\n!!![Invalid Solution #]!!!");
   		
	}
}
